&ACCESS RVP
&REL 6
&PARAM EDITMASK = *
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
DEF RSIActivator()

; Declaration of KRL variables
DECL INT ret	; Return value for RSI commands
DECL INT CONTID	; ContainerID
DECL INT speed


;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3 
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
    ;Make your modifications here

  ;ENDFOLD (USER INI)
;ENDFOLD (INI)

speed=20

$VEL_AXIS[1]=speed
$VEL_AXIS[2]=speed
$VEL_AXIS[3]=speed
$VEL_AXIS[4]=speed
$VEL_AXIS[5]=speed
$VEL_AXIS[6]=speed


; Move to start position
PTP {A1 -60, A2 -30, A3 90, A4 0, A5 30, A6 -60}

$OUT[100] = FALSE

; Create RSI Context 
ret = RSI_CREATE("RSI_Activator.rsi",CONTID,TRUE)
IF (ret <> RSIOK) THEN
  HALT
ENDIF

; Start RSI execution
ret = RSI_ON(#ABSOLUTE, #IPO)
IF (ret <> RSIOK) THEN
  HALT
ENDIF

$VEL_AXIS[1]=speed
$VEL_AXIS[2]=speed
$VEL_AXIS[3]=speed
$VEL_AXIS[4]=speed
$VEL_AXIS[5]=speed
$VEL_AXIS[6]=speed

$OUT[100] = TRUE
$OUT[101] = FALSE

; Sensor guided movement
WHILE TRUE
	WAIT FOR $OUT[101]
		$OUT[100] = FALSE
		$OUT[101] = FALSE
		PTP {A1 -80, A2 -30, A3 90, A4 0, A5 30, A6 -60}
		PTP {A1 -60, A2 -30, A3 90, A4 0, A5 30, A6 -60}
		$OUT[100] = TRUE
	
ENDWHILE

; Turn off RSI 
ret = RSI_OFF()
IF (ret <> RSIOK) THEN
  HALT
ENDIF

PTP {A1 0, A2 -90, A3 90, A4 0, A5 0, A6 0}

END